paths: 
  /api/carts/:
    get:
      summary: Obtiene todos los carritos
      tags: 
        - Carts
      responses:
        "200":
          description: Los carritos fueron obtenidos correctamente
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#components/schemas/Cart'
        "500":
          description: Error interno del servidor, usualmente generado por una consulta defectuosa
    post:
      summary: Crea un nuevo carrito
      tags: 
        - Carts
      requestBody:
        required: true
        content: 
          application/json:
            schema: 
              $ref: '#components/requestBodies/createCart'
      responses:
        "201":
          description: El carrito fue creado correctamente
  /api/carts/{cartId}:
    get:
      summary: Obtiene un carrito por su ID
      tags: 
        - Carts
      parameters:
      - name: cartId
        in: path
        required: true
        description: El ID del carrito a solicitar.
        schema:
          type: string
      responses:
        "200":
          description: El carrito fue obtenido correctamente
          content:
            application/json:
              schema: 
                $ref: '#components/schemas/Cart'
components:
  schemas: 
    Cart: 
      type: object
      properties: 
        _id:
          type: string
          description: ID autogenerado por MongoDB.
        userId:
          type: string
          description: ID del usuario asociado al carrito.
        products:
          type: array
          items: 
            type: object
            properties:
              productId:
                type: string
                description: ID del producto en el carrito.
              quantity:
                type: number
                description: Cantidad del producto en el carrito.
          description: Productos en el carrito junto con sus cantidades.
      example:
        _id: ObjectId('fasldkf56asdf.asdfa6a54s')
        userId: ObjectId('user123')
        products:
          - productId: ObjectId('prod123')
            quantity: 2
          - productId: ObjectId('prod456')
            quantity: 1
  requestBodies: 
    createCart:
      type: object
      properties: 
        userId:
          type: string
          description: ID del usuario asociado al carrito.
        products:
          type: array
          items: 
            type: object
            properties:
              productId:
                type: string
                description: ID del producto en el carrito.
              quantity:
                type: number
                description: Cantidad del producto en el carrito.
          description: Productos en el carrito junto con sus cantidades.
      example:
        userId: ObjectId('user123')
        products:
          - productId: ObjectId('prod123')
            quantity: 2
          - productId: ObjectId('prod456')
            quantity: 1

         
